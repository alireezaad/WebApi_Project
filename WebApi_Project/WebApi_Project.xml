<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebApi_Project</name>
    </assembly>
    <members>
        <member name="M:WebApi_Project.Controllers.v1.AccountController.MyRegex">
            <remarks>
            Pattern explanation:<br/>
            <code>
            ○ Match if at the beginning of the string.<br/>
            ○ Match the string "09".<br/>
            ○ Match a Unicode digit exactly 9 times.<br/>
            ○ Match if at the end of the string or if before an ending newline.<br/>
            </code>
            </remarks>
        </member>
        <member name="M:WebApi_Project.Controllers.v1.UsersController.Get">
            <summary>
            Get all users without their tasks
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebApi_Project.Controllers.v1.UsersController.Get(System.Int32)">
            <summary>
            Get a user with tasks
            </summary>
            <param name="id">User identifier</param>
            <returns></returns>
        </member>
        <member name="M:WebApi_Project.Controllers.v1.UsersController.Post(Application.Models.UserModels.UserPostModel)">
            <summary>
            Create a new user
            </summary>
            <param name="model">Including: Firstname,Lastname,Email and Password</param>
            <returns>201 StatusCode with user's info</returns>
        </member>
        <member name="M:WebApi_Project.Controllers.v1.UsersController.Put(System.Int32,Application.Models.UserModels.UserPutModel)">
            <summary>
            Edit a user's info like firstname,lastname,email or password
            </summary>
            <param name="id"></param>
            <param name="model"></param>
            <returns>Edited user</returns>
        </member>
        <member name="M:WebApi_Project.Controllers.v1.UsersController.Delete(System.Int32)">
            <summary>
            Delete a user with id
            </summary>
            <param name="id">User identifier</param>
            <returns></returns>
        </member>
        <member name="M:WebApi_Project.Controllers.v2.UsersController.Get">
            <summary>
            Get all users with their tasks
            </summary>
            <returns>an IEnumerable of users</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.MyRegex_0">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the MyRegex method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.MyRegex_0.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.MyRegex_0.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.MyRegex_0.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.MyRegex_0.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.MyRegex_0.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.MyRegex_0.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.MyRegex_0.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.MyRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.Utilities">
            <summary>Helper methods used by generated <see cref="T:System.Text.RegularExpressions.Regex"/>-derived implementations.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout">
            <summary>Default timeout value set in <see cref="T:System.AppContext"/>, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout"/> if none was set.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout">
            <summary>Whether <see cref="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout"/> is non-infinite.</summary>
        </member>
    </members>
</doc>
